{"version":3,"file":"index-legacy.b538ca06.js","sources":["../../src/composables/common/index.ts"],"sourcesContent":["import { DefaultCity } from '@/constant/city'\nimport { getPosition, getSelectCity, setSelectCity } from '@/utils'\nimport { CityType } from '@/types/city'\nimport { PositionType } from '@/types/position'\nimport { onMounted, Ref, ref } from 'vue'\nimport { queryDistricts } from '@/api/common'\nimport { DistrictType } from '@/types/classifySort'\n\n/* 获取选择城市、定位等信息 */\nexport const useLocation = (options: {\n  districts: boolean\n  position: boolean\n}) => {\n  const position: Ref<PositionType | null> = ref(null)\n  const cityInfo: Ref<CityType> = ref(DefaultCity)\n  const districts: Ref<DistrictType[]> = ref([])\n  const locationLoaded = ref(false) //选择城市与定位是否均获取完毕，可判断是否可以开始需要传参城市与定位的请求\n  onMounted(async () => {\n    const cookieCity = getSelectCity()\n    /* 1、优先取cookie city */\n    if (cookieCity) {\n      cityInfo.value = cookieCity\n    } else {\n      /* 2、没有取定位城市 */\n      options.position && (position.value = await getPosition())\n      if (position.value != null) {\n        cityInfo.value = {\n          cityId: position.value.cityId,\n          cityName: position.value.cityName\n        }\n      } else {\n        /* 3、定位也取不到取默认南京 */\n        cityInfo.value = DefaultCity\n      }\n    }\n    // 设置cookie city\n    setSelectCity(cityInfo.value.cityId, cityInfo.value.cityName)\n    if (position.value == null && options.position) {\n      // 上面的操作没有用到定位时，异步获取定位，不影响titlebar的城市显示\n      getPosition().then(data => {\n        position.value = data\n        locationLoaded.value = true\n      })\n    } else {\n      locationLoaded.value = true\n    }\n    // 如有必要，查询当前城市的城区\n    if (options.districts) {\n      const districtList = await queryDistricts(cityInfo.value.cityId)\n      districts.value = districtList.map((item: any) => {\n        return {\n          id: item.ID,\n          name: item.NAME\n        }\n      })\n    }\n  })\n  return { position, cityInfo, districts, locationLoaded }\n}\n"],"names":["options","position","ref","cityInfo","DefaultCity","districts","locationLoaded","cookieCity","getSelectCity","value","_context","getPosition","cityId","cityName","then","data","queryDistricts","districtList","map","item","id","ID","name","NAME"],"mappings":"2lBAS2B,SAACA,OAIpBC,EAAqCC,EAAI,MACzCC,EAA0BD,EAAIE,GAC9BC,EAAiCH,EAAI,IACrCI,EAAiBJ,GAAI,uCACjB,0GACFK,EAAaC,uBAGRC,MAAQF,EAJXG,iCAOET,gDAAoCU,aAAdF,qBACR,MAAlBR,EAASQ,QACFA,MAAQ,CACfG,OAAQX,EAASQ,MAAMG,OACvBC,SAAUZ,EAASQ,MAAMI,YAIlBJ,MAAQL,EAfb,QAAA,KAmBMD,EAASM,MAAMG,OAAQT,EAASM,MAAMI,UAC9B,MAAlBZ,EAASQ,OAAiBT,EAAQC,aAEtBa,MAAK,cACRL,MAAQM,IACFN,OAAQ,OAGVA,OAAQ,GAGrBT,EAAQK,4CACiBW,EAAeb,EAASM,MAAMG,gBAAnDK,WACIR,MAAQQ,EAAaC,KAAI,SAACC,SAC3B,CACLC,GAAID,EAAKE,GACTC,KAAMH,EAAKI,SAnCT,6CAwCH,CAAEtB,SAAAA,EAAUE,SAAAA,EAAUE,UAAAA,EAAWC,eAAAA"}