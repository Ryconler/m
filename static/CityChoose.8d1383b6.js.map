{"version":3,"file":"CityChoose.8d1383b6.js","sources":["../../src/views/city-choose/CityChoose.vue","../../src/composables/city-choose/cityChoose.ts"],"sourcesContent":["<template>\n  <div class=\"city-choose\">\n    <div v-if=\"hotCitys.length > 0\" class=\"hot-city\">\n      <h2 class=\"hot-city-title\">热门城市</h2>\n      <ul class=\"hot-city-items clearfix\">\n        <li\n          v-for=\"(item, index) in hotCitys\"\n          :key=\"'hot-city-' + index\"\n          class=\"hot-city-item\"\n          @click=\"useCity(item)\"\n        >\n          <span>{{ item.cityName }}</span>\n        </li>\n      </ul>\n    </div>\n    <div v-if=\"historyCitys.length > 0\" class=\"history-city\">\n      <h2 class=\"history-city-title\">\n        历史访问城市<i class=\"delete-icon\" @click=\"clearHistory\"> </i>\n      </h2>\n      <ul class=\"history-city-items clearfix\">\n        <li\n          v-for=\"(item, index) in historyCitys\"\n          :key=\"'history-city-' + index\"\n          class=\"history-city-item\"\n          @click=\"useCity(item)\"\n        >\n          <span>{{ item.cityName }}</span>\n        </li>\n      </ul>\n    </div>\n    <div class=\"city-list\">\n      <div v-for=\"(py, index) in listCitysKeys\" :key=\"index\">\n        <h3 :id=\"py\" class=\"city-char\">{{ py }}</h3>\n        <ul class=\"city-list-items clearfix\">\n          <li\n            v-for=\"(city, index) in listCitys[py]\"\n            :key=\"'city-list-item-' + index\"\n            class=\"city-list-item\"\n            @click=\"useCity(city)\"\n          >\n            <span>{{ city.cityName }}</span>\n          </li>\n        </ul>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script lang=\"ts\" setup>\nimport { useRoute } from 'vue-router'\nimport { CityType, setSelectCity } from '@/utils/index'\nimport { getCityChooseData } from '@/composables/city-choose/cityChoose'\n\nconst route = useRoute()\n\nconst { listCitys, historyCitys, hotCitys, listCitysKeys } = getCityChooseData()\nconst useCity = (city: CityType) => {\n  setSelectCity(city.cityId, city.cityName)\n  const referrer = route.query.referrer || document.referrer || ''\n  location.href = referrer.toString()\n}\nconst clearHistory = () => {\n  historyCitys.value = []\n}\n</script>\n\n<style lang=\"scss\" scoped>\n.city-choose {\n  min-height: 100vh;\n  background-color: #fff;\n  padding: 30px 24px;\n  .hot-city,\n  .history-city {\n    margin-bottom: 24px;\n    .hot-city-title,\n    .history-city-title {\n      font-size: 26px;\n      color: $light-text-color;\n      margin-bottom: 24px;\n    }\n    .hot-city-items,\n    .history-city-items {\n      .hot-city-item,\n      .history-city-item {\n        width: 25%;\n        height: 50px;\n        line-height: 50px;\n        border-radius: 8px;\n        font-size: 26px;\n        text-align: center;\n        background: $light-bg-color;\n        color: $deep-text-color;\n        float: left;\n        margin-right: 24px;\n        margin-bottom: 24px;\n      }\n    }\n  }\n\n  .history-city {\n    position: relative;\n    .delete-icon {\n      width: 26px;\n      height: 26px;\n      background: url(@/assets/images/city-choose/icon-delete.png) no-repeat\n        center center/26px 26px;\n      position: absolute;\n      right: 0;\n      top: 0;\n    }\n  }\n\n  .city-list {\n    .city-char {\n      color: $light-text-color;\n      font-size: 26px;\n      padding: 24px 0;\n    }\n    .city-list-items {\n      margin-bottom: 30px;\n      .city-list-item {\n        color: $deep-text-color;\n        font-size: 28px;\n        padding: 24px 0;\n        border-bottom: 2px solid $light-bg-color;\n        &:last-child {\n          border-bottom: none;\n        }\n      }\n    }\n  }\n}\n</style>\n","import { CityType } from '@/utils'\nimport { computed, Ref, ref } from 'vue'\n\nexport function getCityChooseData() {\n  const listCitys: Ref<any> = ref({\n    N: [{ cityName: '南京', cityId: '320100' }],\n    S: [\n      { cityName: '上海', cityId: '310100' },\n      { cityName: '上海', cityId: '310100' }\n    ]\n  })\n  const historyCitys: Ref<CityType[]> = ref([\n    { cityName: '南京', cityId: '320100' },\n    { cityName: '上海', cityId: '310100' }\n  ])\n  const hotCitys: Ref<CityType[]> = ref([\n    { cityName: '南京', cityId: '320100' },\n    { cityName: '上海', cityId: '310100' }\n  ])\n  const listCitysKeys: Ref<string[]> = computed(() => {\n    return Object.keys(listCitys.value).sort()\n  })\n  return {\n    listCitys,\n    historyCitys,\n    hotCitys,\n    listCitysKeys\n  }\n}\n"],"names":["route","useRoute","listCitys","historyCitys","hotCitys","listCitysKeys","ref","N","cityName","cityId","S","computed","Object","keys","value","sort","getCityChooseData","useCity","city","referrer","query","document","href","toString","clearHistory"],"mappings":"8oBAqDMA,EAAQC,KAERC,UAAEA,eAAWC,WAAcC,gBAAUC,oBCnDnCH,EAAsBI,EAAI,CAC9BC,EAAG,CAAC,CAAEC,SAAU,KAAMC,OAAQ,WAC9BC,EAAG,CACD,CAAEF,SAAU,KAAMC,OAAQ,UAC1B,CAAED,SAAU,KAAMC,OAAQ,aAGxBN,EAAgCG,EAAI,CACxC,CAAEE,SAAU,KAAMC,OAAQ,UAC1B,CAAED,SAAU,KAAMC,OAAQ,YAEtBL,EAA4BE,EAAI,CACpC,CAAEE,SAAU,KAAMC,OAAQ,UAC1B,CAAED,SAAU,KAAMC,OAAQ,YAEtBJ,EAA+BM,GAAS,IACrCC,OAAOC,KAAKX,EAAUY,OAAOC,eAE/B,CACLb,UAAAA,EACAC,aAAAA,EACAC,SAAAA,EACAC,cAAAA,GD6ByDW,GACvDC,EAAWC,MACDA,EAAKT,OAAQS,EAAKV,gBAC1BW,EAAWnB,EAAMoB,MAAMD,UAAYE,SAASF,UAAY,YACrDG,KAAOH,EAASI,YAErBC,EAAe,OACNV,MAAQ"}