{"version":3,"file":"index.076cf1d0.js","sources":["../../vite/modulepreload-polyfill","../../plugin-vue:export-helper","../../src/App.vue","../../vite/preload-helper","../../src/router/index.ts","../../src/store/index.ts","../../src/main.ts","../../src/plugins/mixins.ts"],"sourcesContent":["const p = function polyfill() {\n    const relList = document.createElement('link').relList;\n    if (relList && relList.supports && relList.supports('modulepreload')) {\n        return;\n    }\n    for (const link of document.querySelectorAll('link[rel=\"modulepreload\"]')) {\n        processPreload(link);\n    }\n    new MutationObserver((mutations) => {\n        for (const mutation of mutations) {\n            if (mutation.type !== 'childList') {\n                continue;\n            }\n            for (const node of mutation.addedNodes) {\n                if (node.tagName === 'LINK' && node.rel === 'modulepreload')\n                    processPreload(node);\n            }\n        }\n    }).observe(document, { childList: true, subtree: true });\n    function getFetchOpts(script) {\n        const fetchOpts = {};\n        if (script.integrity)\n            fetchOpts.integrity = script.integrity;\n        if (script.referrerpolicy)\n            fetchOpts.referrerPolicy = script.referrerpolicy;\n        if (script.crossorigin === 'use-credentials')\n            fetchOpts.credentials = 'include';\n        else if (script.crossorigin === 'anonymous')\n            fetchOpts.credentials = 'omit';\n        else\n            fetchOpts.credentials = 'same-origin';\n        return fetchOpts;\n    }\n    function processPreload(link) {\n        if (link.ep)\n            // ep marker = processed\n            return;\n        link.ep = true;\n        // prepopulate the load record\n        const fetchOpts = getFetchOpts(link);\n        fetch(link.href, fetchOpts);\n    }\n};__VITE_IS_MODERN__&&p();","\nexport default (sfc, props) => {\n  for (const [key, val] of props) {\n    sfc[key] = val\n  }\n  return sfc\n}\n","<template>\n  <router-view v-if=\"$route.meta.keepAlive\" v-slot=\"{ Component }\">\n    <keep-alive>\n      <component :is=\"Component\" />\n    </keep-alive>\n  </router-view>\n  <router-view v-else></router-view>\n</template>\n\n<script lang=\"ts\">\nimport { defineComponent } from 'vue'\n\nexport default defineComponent({})\n</script>\n\n<style lang=\"scss\">\nhtml,\nbody {\n  width: 100%;\n  height: 100%;\n}\nbody {\n  // background-image: url('./assets/images/bg.png');\n  background-position: center;\n  background-size: cover;\n  background-repeat: no-repeat;\n  background-attachment: fixed;\n}\n#app {\n  * {\n    box-sizing: border-box;\n  }\n}\n.clearfix::after {\n  display: block;\n  clear: both;\n  visibility: hidden;\n  height: 0;\n  overflow: hidden;\n  content: '';\n}\n</style>\n","const scriptRel = 'modulepreload';const seen = {};const base = '/';export const __vitePreload = function preload(baseModule, deps) {\n    // @ts-ignore\n    if (!__VITE_IS_MODERN__ || !deps || deps.length === 0) {\n        return baseModule();\n    }\n    return Promise.all(deps.map((dep) => {\n        // @ts-ignore\n        dep = `${base}${dep}`;\n        // @ts-ignore\n        if (dep in seen)\n            return;\n        // @ts-ignore\n        seen[dep] = true;\n        const isCss = dep.endsWith('.css');\n        const cssSelector = isCss ? '[rel=\"stylesheet\"]' : '';\n        // @ts-ignore check if the file is already preloaded by SSR markup\n        if (document.querySelector(`link[href=\"${dep}\"]${cssSelector}`)) {\n            return;\n        }\n        // @ts-ignore\n        const link = document.createElement('link');\n        // @ts-ignore\n        link.rel = isCss ? 'stylesheet' : scriptRel;\n        if (!isCss) {\n            link.as = 'script';\n            link.crossOrigin = '';\n        }\n        link.href = dep;\n        // @ts-ignore\n        document.head.appendChild(link);\n        if (isCss) {\n            return new Promise((res, rej) => {\n                link.addEventListener('load', res);\n                link.addEventListener('error', rej);\n            });\n        }\n    })).then(() => baseModule());\n}","import { createRouter, createWebHistory, RouteRecordRaw } from 'vue-router'\n\nconst routes: Array<RouteRecordRaw> = [\n  {\n    path: '/',\n    name: 'home',\n    component: () => import('@/views/home/Home.vue')\n  },\n  {\n    path: '/city-choose',\n    name: 'cityChoose',\n    component: () => import('@/views/city-choose/CityChoose.vue')\n  },\n  {\n    path: '/search',\n    name: 'search',\n    component: () => import('@/views/search/Search.vue')\n  },\n  {\n    path: '/photography',\n    name: 'photography',\n    component: () => import('@/views/photography/Photography.vue')\n  }\n]\n\nconst router = createRouter({\n  routes,\n  history: createWebHistory(import.meta.env.BASE_URL)\n})\nexport default router\n","import { createStore } from 'vuex'\n\nconst store = createStore({\n  state: {},\n  getters: {},\n  mutations: {},\n  actions: {}\n})\nexport default store\n","import { createApp } from 'vue'\n\nimport App from './App.vue'\nimport router from './router'\nimport store from './store'\nimport { setupDirectives } from './plugins/directives'\nimport { setupMethods } from './plugins/middlewares'\nimport { setupMixins } from './plugins/mixins'\nimport '@/assets/css/normalize.scss'\n\nconst app = createApp(App)\nsetupDirectives(app)\nsetupMethods(app)\nsetupMixins(app)\napp.use(store).use(router).mount('#app')\n","import { App } from 'vue'\n\n/**\n * 注册全局mixin\n * @param app\n */\nexport function setupMixins(app: App) {\n  app.mixin({})\n}\n"],"names":["relList","document","createElement","supports","link","querySelectorAll","MutationObserver","mutations","mutation","type","node","addedNodes","tagName","rel","observe","childList","subtree","ep","fetchOpts","script","integrity","referrerpolicy","referrerPolicy","crossorigin","credentials","getFetchOpts","href","p","sfc","props","key","val","defineComponent","meta","_component_router_view","_KeepAlive","seen","__vitePreload","baseModule","deps","length","Promise","all","map","dep","isCss","endsWith","cssSelector","querySelector","as","crossOrigin","head","appendChild","res","rej","addEventListener","then","router","createRouter","routes","path","name","component","history","createWebHistory","store","createStore","state","getters","actions","app","createApp","App","mixin","use","mount"],"mappings":"sLAAU,iBACAA,EAAUC,SAASC,cAAc,QAAQF,aAC3CA,GAAWA,EAAQG,UAAYH,EAAQG,SAAS,6BAGzCC,KAAQH,SAASI,iBAAiB,+BAC1BD,OAEfE,kBAAkBC,cACPC,KAAYD,KACG,cAAlBC,EAASC,eAGFC,KAAQF,EAASG,WACH,SAAjBD,EAAKE,SAAmC,kBAAbF,EAAKG,OACjBH,MAG5BI,QAAQb,SAAU,CAAEc,WAAW,EAAMC,SAAS,eAezBZ,MAChBA,EAAKa,YAGJA,IAAK,QAEJC,WApBYC,SACZD,EAAY,UACdC,EAAOC,cACGA,UAAYD,EAAOC,WAC7BD,EAAOE,mBACGC,eAAiBH,EAAOE,gBACX,oBAAvBF,EAAOI,cACGC,YAAc,UACI,cAAvBL,EAAOI,cACFC,YAAc,SAEdA,YAAc,cACrBN,EAQWO,CAAarB,SACzBA,EAAKsB,KAAMR,IAEvBS,SCzCa,CAACC,EAAKC,eACPC,EAAKC,KAAQF,IACnBC,GAAOC,SAENH,WCOSI,EAAe,8EAX/BC,sBAAoDC,EAAS,oBAC3D,iBAEa,QADXC,EAA6B,6DCHnC,MAAwCC,EAAO,GAAiCC,EAAgB,SAAiBC,EAAYC,UAE7FA,GAAwB,IAAhBA,EAAKC,OAGlCC,QAAQC,IAAIH,EAAKI,KAAKC,UAEnB,IAAUA,OAELR,WAGNQ,IAAO,QACNC,EAAQD,EAAIE,SAAS,QACrBC,EAAcF,EAAQ,qBAAuB,MAE/C5C,SAAS+C,cAAc,cAAcJ,MAAQG,kBAI3C3C,EAAOH,SAASC,cAAc,iBAE/BW,IAAMgC,EAAQ,aAtBT,gBAuBLA,MACII,GAAK,WACLC,YAAc,MAElBxB,KAAOkB,WAEHO,KAAKC,YAAYhD,GACtByC,EACO,IAAIJ,SAAQ,CAACY,EAAKC,OAChBC,iBAAiB,OAAQF,KACzBE,iBAAiB,QAASD,iBAGvCE,MAAK,IAAMlB,MAjCJA,KCsBTmB,EAASC,EAAa,CAC1BC,OAxBoC,CACpC,CACEC,KAAM,IACNC,KAAM,OACNC,UAAW,IAAMzB,0DAEnB,CACEuB,KAAM,eACNC,KAAM,aACNC,UAAW,IAAMzB,gEAEnB,CACEuB,KAAM,UACNC,KAAM,SACNC,UAAW,IAAMzB,4DAEnB,CACEuB,KAAM,eACNC,KAAM,cACNC,UAAW,IAAMzB,kEAMnB0B,QAASC,EAAiB,OCzBtBC,EAAQC,EAAY,CACxBC,MAAO,GACPC,QAAS,GACT7D,UAAW,GACX8D,QAAS,KCIX,MAAMC,EAAMC,EAAUC,GAGVF,ECNNG,MAAM,IDOZH,EAAII,IAAIT,GAAOS,IAAIjB,GAAQkB,MAAM"}