{"version":3,"file":"index-legacy.251e9ab9.js","sources":["../../node_modules/vant/es/image-preview/ImagePreviewItem.js","../../node_modules/vant/es/image-preview/function-call.js","../../node_modules/vant/es/image-preview/ImagePreview.js"],"sourcesContent":["import { createVNode as _createVNode } from \"vue\";\nimport { watch, computed, reactive, defineComponent } from \"vue\";\nimport { clamp, numericProp, preventDefault, createNamespace, makeRequiredProp } from \"../utils\";\nimport { useTouch } from \"../composables/use-touch\";\nimport { Image } from \"../image\";\nimport { Loading } from \"../loading\";\nimport { SwipeItem } from \"../swipe-item\";\nconst getDistance = (touches) => Math.sqrt((touches[0].clientX - touches[1].clientX) ** 2 + (touches[0].clientY - touches[1].clientY) ** 2);\nconst bem = createNamespace(\"image-preview\")[1];\nvar stdin_default = defineComponent({\n  props: {\n    src: String,\n    show: Boolean,\n    active: Number,\n    minZoom: makeRequiredProp(numericProp),\n    maxZoom: makeRequiredProp(numericProp),\n    rootWidth: makeRequiredProp(Number),\n    rootHeight: makeRequiredProp(Number)\n  },\n  emits: [\"scale\", \"close\"],\n  setup(props, {\n    emit\n  }) {\n    const state = reactive({\n      scale: 1,\n      moveX: 0,\n      moveY: 0,\n      moving: false,\n      zooming: false,\n      imageRatio: 0,\n      displayWidth: 0,\n      displayHeight: 0\n    });\n    const touch = useTouch();\n    const vertical = computed(() => {\n      const {\n        rootWidth,\n        rootHeight\n      } = props;\n      const rootRatio = rootHeight / rootWidth;\n      return state.imageRatio > rootRatio;\n    });\n    const imageStyle = computed(() => {\n      const {\n        scale,\n        moveX,\n        moveY,\n        moving,\n        zooming\n      } = state;\n      const style = {\n        transitionDuration: zooming || moving ? \"0s\" : \".3s\"\n      };\n      if (scale !== 1) {\n        const offsetX = moveX / scale;\n        const offsetY = moveY / scale;\n        style.transform = `scale(${scale}, ${scale}) translate(${offsetX}px, ${offsetY}px)`;\n      }\n      return style;\n    });\n    const maxMoveX = computed(() => {\n      if (state.imageRatio) {\n        const {\n          rootWidth,\n          rootHeight\n        } = props;\n        const displayWidth = vertical.value ? rootHeight / state.imageRatio : rootWidth;\n        return Math.max(0, (state.scale * displayWidth - rootWidth) / 2);\n      }\n      return 0;\n    });\n    const maxMoveY = computed(() => {\n      if (state.imageRatio) {\n        const {\n          rootWidth,\n          rootHeight\n        } = props;\n        const displayHeight = vertical.value ? rootHeight : rootWidth * state.imageRatio;\n        return Math.max(0, (state.scale * displayHeight - rootHeight) / 2);\n      }\n      return 0;\n    });\n    const setScale = (scale) => {\n      scale = clamp(scale, +props.minZoom, +props.maxZoom + 1);\n      if (scale !== state.scale) {\n        state.scale = scale;\n        emit(\"scale\", {\n          scale,\n          index: props.active\n        });\n      }\n    };\n    const resetScale = () => {\n      setScale(1);\n      state.moveX = 0;\n      state.moveY = 0;\n    };\n    const toggleScale = () => {\n      const scale = state.scale > 1 ? 1 : 2;\n      setScale(scale);\n      state.moveX = 0;\n      state.moveY = 0;\n    };\n    let fingerNum;\n    let startMoveX;\n    let startMoveY;\n    let startScale;\n    let startDistance;\n    let doubleTapTimer;\n    let touchStartTime;\n    const onTouchStart = (event) => {\n      const {\n        touches\n      } = event;\n      const {\n        offsetX\n      } = touch;\n      touch.start(event);\n      fingerNum = touches.length;\n      startMoveX = state.moveX;\n      startMoveY = state.moveY;\n      touchStartTime = Date.now();\n      state.moving = fingerNum === 1 && state.scale !== 1;\n      state.zooming = fingerNum === 2 && !offsetX.value;\n      if (state.zooming) {\n        startScale = state.scale;\n        startDistance = getDistance(event.touches);\n      }\n    };\n    const onTouchMove = (event) => {\n      const {\n        touches\n      } = event;\n      touch.move(event);\n      if (state.moving || state.zooming) {\n        preventDefault(event, true);\n      }\n      if (state.moving) {\n        const {\n          deltaX,\n          deltaY\n        } = touch;\n        const moveX = deltaX.value + startMoveX;\n        const moveY = deltaY.value + startMoveY;\n        state.moveX = clamp(moveX, -maxMoveX.value, maxMoveX.value);\n        state.moveY = clamp(moveY, -maxMoveY.value, maxMoveY.value);\n      }\n      if (state.zooming && touches.length === 2) {\n        const distance = getDistance(touches);\n        const scale = startScale * distance / startDistance;\n        setScale(scale);\n      }\n    };\n    const checkTap = () => {\n      if (fingerNum > 1) {\n        return;\n      }\n      const {\n        offsetX,\n        offsetY\n      } = touch;\n      const deltaTime = Date.now() - touchStartTime;\n      const TAP_TIME = 250;\n      const TAP_OFFSET = 5;\n      if (offsetX.value < TAP_OFFSET && offsetY.value < TAP_OFFSET && deltaTime < TAP_TIME) {\n        if (doubleTapTimer) {\n          clearTimeout(doubleTapTimer);\n          doubleTapTimer = null;\n          toggleScale();\n        } else {\n          doubleTapTimer = setTimeout(() => {\n            emit(\"close\");\n            doubleTapTimer = null;\n          }, TAP_TIME);\n        }\n      }\n    };\n    const onTouchEnd = (event) => {\n      let stopPropagation = false;\n      if (state.moving || state.zooming) {\n        stopPropagation = true;\n        if (state.moving && startMoveX === state.moveX && startMoveY === state.moveY) {\n          stopPropagation = false;\n        }\n        if (!event.touches.length) {\n          if (state.zooming) {\n            state.moveX = clamp(state.moveX, -maxMoveX.value, maxMoveX.value);\n            state.moveY = clamp(state.moveY, -maxMoveY.value, maxMoveY.value);\n            state.zooming = false;\n          }\n          state.moving = false;\n          startMoveX = 0;\n          startMoveY = 0;\n          startScale = 1;\n          if (state.scale < 1) {\n            resetScale();\n          }\n          if (state.scale > props.maxZoom) {\n            state.scale = +props.maxZoom;\n          }\n        }\n      }\n      preventDefault(event, stopPropagation);\n      checkTap();\n      touch.reset();\n    };\n    const onLoad = (event) => {\n      const {\n        naturalWidth,\n        naturalHeight\n      } = event.target;\n      state.imageRatio = naturalHeight / naturalWidth;\n    };\n    watch(() => props.active, resetScale);\n    watch(() => props.show, (value) => {\n      if (!value) {\n        resetScale();\n      }\n    });\n    return () => {\n      const imageSlots = {\n        loading: () => _createVNode(Loading, {\n          \"type\": \"spinner\"\n        }, null)\n      };\n      return _createVNode(SwipeItem, {\n        \"class\": bem(\"swipe-item\"),\n        \"onTouchstart\": onTouchStart,\n        \"onTouchmove\": onTouchMove,\n        \"onTouchend\": onTouchEnd,\n        \"onTouchcancel\": onTouchEnd\n      }, {\n        default: () => [_createVNode(Image, {\n          \"src\": props.src,\n          \"fit\": \"contain\",\n          \"class\": bem(\"image\", {\n            vertical: vertical.value\n          }),\n          \"style\": imageStyle.value,\n          \"onLoad\": onLoad\n        }, imageSlots)]\n      });\n    };\n  }\n});\nexport {\n  stdin_default as default\n};\n","import { createVNode as _createVNode, mergeProps as _mergeProps } from \"vue\";\nimport { extend, inBrowser, withInstall } from \"../utils\";\nimport { mountComponent, usePopupState } from \"../utils/mount-component\";\nimport VanImagePreview from \"./ImagePreview\";\nlet instance;\nconst defaultConfig = {\n  loop: true,\n  images: [],\n  maxZoom: 3,\n  minZoom: 1 / 3,\n  onScale: void 0,\n  onClose: void 0,\n  onChange: void 0,\n  teleport: \"body\",\n  className: \"\",\n  showIndex: true,\n  closeable: false,\n  closeIcon: \"clear\",\n  transition: void 0,\n  beforeClose: void 0,\n  overlayStyle: void 0,\n  overlayClass: void 0,\n  startPosition: 0,\n  swipeDuration: 300,\n  showIndicators: false,\n  closeOnPopstate: true,\n  closeIconPosition: \"top-right\"\n};\nfunction initInstance() {\n  ({\n    instance\n  } = mountComponent({\n    setup() {\n      const {\n        state,\n        toggle\n      } = usePopupState();\n      const onClosed = () => {\n        state.images = [];\n      };\n      return () => _createVNode(VanImagePreview, _mergeProps(state, {\n        \"onClosed\": onClosed,\n        \"onUpdate:show\": toggle\n      }), null);\n    }\n  }));\n}\nconst ImagePreview = (options, startPosition = 0) => {\n  if (!inBrowser) {\n    return;\n  }\n  if (!instance) {\n    initInstance();\n  }\n  options = Array.isArray(options) ? {\n    images: options,\n    startPosition\n  } : options;\n  instance.open(extend({}, defaultConfig, options));\n  return instance;\n};\nImagePreview.Component = withInstall(VanImagePreview);\nImagePreview.install = (app) => {\n  app.use(ImagePreview.Component);\n};\nexport {\n  ImagePreview\n};\n","import { mergeProps as _mergeProps, createVNode as _createVNode } from \"vue\";\nimport { ref, watch, nextTick, reactive, onMounted, defineComponent } from \"vue\";\nimport { pick, truthProp, unknownProp, windowWidth, windowHeight, makeArrayProp, makeStringProp, makeNumericProp, callInterceptor, createNamespace, HAPTICS_FEEDBACK } from \"../utils\";\nimport { useRect } from \"@vant/use\";\nimport { useExpose } from \"../composables/use-expose\";\nimport { Icon } from \"../icon\";\nimport { Swipe } from \"../swipe\";\nimport { Popup } from \"../popup\";\nimport ImagePreviewItem from \"./ImagePreviewItem\";\nconst [name, bem] = createNamespace(\"image-preview\");\nconst popupProps = [\"show\", \"transition\", \"overlayStyle\", \"closeOnPopstate\"];\nconst imagePreviewProps = {\n  show: Boolean,\n  loop: truthProp,\n  images: makeArrayProp(),\n  minZoom: makeNumericProp(1 / 3),\n  maxZoom: makeNumericProp(3),\n  overlay: truthProp,\n  closeable: Boolean,\n  showIndex: truthProp,\n  className: unknownProp,\n  closeIcon: makeStringProp(\"clear\"),\n  transition: String,\n  beforeClose: Function,\n  overlayClass: unknownProp,\n  overlayStyle: Object,\n  swipeDuration: makeNumericProp(300),\n  startPosition: makeNumericProp(0),\n  showIndicators: Boolean,\n  closeOnPopstate: truthProp,\n  closeIconPosition: makeStringProp(\"top-right\")\n};\nvar stdin_default = defineComponent({\n  name,\n  props: imagePreviewProps,\n  emits: [\"scale\", \"close\", \"closed\", \"change\", \"update:show\"],\n  setup(props, {\n    emit,\n    slots\n  }) {\n    const swipeRef = ref();\n    const state = reactive({\n      active: 0,\n      rootWidth: 0,\n      rootHeight: 0\n    });\n    const resize = () => {\n      if (swipeRef.value) {\n        const rect = useRect(swipeRef.value.$el);\n        state.rootWidth = rect.width;\n        state.rootHeight = rect.height;\n        swipeRef.value.resize();\n      }\n    };\n    const emitScale = (args) => emit(\"scale\", args);\n    const updateShow = (show) => emit(\"update:show\", show);\n    const emitClose = () => {\n      callInterceptor(props.beforeClose, {\n        args: [state.active],\n        done: () => updateShow(false)\n      });\n    };\n    const setActive = (active) => {\n      if (active !== state.active) {\n        state.active = active;\n        emit(\"change\", active);\n      }\n    };\n    const renderIndex = () => {\n      if (props.showIndex) {\n        return _createVNode(\"div\", {\n          \"class\": bem(\"index\")\n        }, [slots.index ? slots.index({\n          index: state.active\n        }) : `${state.active + 1} / ${props.images.length}`]);\n      }\n    };\n    const renderCover = () => {\n      if (slots.cover) {\n        return _createVNode(\"div\", {\n          \"class\": bem(\"cover\")\n        }, [slots.cover()]);\n      }\n    };\n    const renderImages = () => _createVNode(Swipe, {\n      \"ref\": swipeRef,\n      \"lazyRender\": true,\n      \"loop\": props.loop,\n      \"class\": bem(\"swipe\"),\n      \"duration\": props.swipeDuration,\n      \"initialSwipe\": props.startPosition,\n      \"showIndicators\": props.showIndicators,\n      \"indicatorColor\": \"white\",\n      \"onChange\": setActive\n    }, {\n      default: () => [props.images.map((image) => _createVNode(ImagePreviewItem, {\n        \"src\": image,\n        \"show\": props.show,\n        \"active\": state.active,\n        \"maxZoom\": props.maxZoom,\n        \"minZoom\": props.minZoom,\n        \"rootWidth\": state.rootWidth,\n        \"rootHeight\": state.rootHeight,\n        \"onScale\": emitScale,\n        \"onClose\": emitClose\n      }, null))]\n    });\n    const renderClose = () => {\n      if (props.closeable) {\n        return _createVNode(Icon, {\n          \"role\": \"button\",\n          \"name\": props.closeIcon,\n          \"class\": [bem(\"close-icon\", props.closeIconPosition), HAPTICS_FEEDBACK],\n          \"onClick\": emitClose\n        }, null);\n      }\n    };\n    const onClosed = () => emit(\"closed\");\n    const swipeTo = (index, options) => {\n      var _a;\n      return (_a = swipeRef.value) == null ? void 0 : _a.swipeTo(index, options);\n    };\n    useExpose({\n      swipeTo\n    });\n    onMounted(resize);\n    watch([windowWidth, windowHeight], resize);\n    watch(() => props.startPosition, (value) => setActive(+value));\n    watch(() => props.show, (value) => {\n      const {\n        images,\n        startPosition\n      } = props;\n      if (value) {\n        setActive(+startPosition);\n        nextTick(() => {\n          resize();\n          swipeTo(+startPosition, {\n            immediate: true\n          });\n        });\n      } else {\n        emit(\"close\", {\n          index: state.active,\n          url: images[state.active]\n        });\n      }\n    });\n    return () => _createVNode(Popup, _mergeProps({\n      \"class\": [bem(), props.className],\n      \"overlayClass\": [bem(\"overlay\"), props.overlayClass],\n      \"onClosed\": onClosed,\n      \"onUpdate:show\": updateShow\n    }, pick(props, popupProps)), {\n      default: () => [renderClose(), renderImages(), renderIndex(), renderCover()]\n    });\n  }\n});\nexport {\n  stdin_default as default\n};\n"],"names":["instance","getDistance","touches","Math","sqrt","clientX","clientY","bem","createNamespace","stdin_default","defineComponent","props","src","String","show","Boolean","active","Number","minZoom","makeRequiredProp","numericProp","maxZoom","rootWidth","rootHeight","emits","setup","fingerNum","startMoveX","startMoveY","startScale","startDistance","doubleTapTimer","touchStartTime","emit","state","reactive","scale","moveX","moveY","moving","zooming","imageRatio","displayWidth","displayHeight","touch","useTouch","vertical","computed","rootRatio","imageStyle","style","transitionDuration","offsetX","offsetY","transform","maxMoveX","value","max","maxMoveY","setScale","clamp","index","resetScale","onTouchStart","event","start","length","Date","now","onTouchMove","move","preventDefault","deltaX","deltaY","distance","checkTap","deltaTime","clearTimeout","setTimeout","onTouchEnd","stopPropagation","reset","onLoad","target","naturalWidth","naturalHeight","watch","imageSlots","loading","_createVNode","Loading","type","SwipeItem","class","onTouchstart","onTouchmove","onTouchend","onTouchcancel","default","Image","fit","name","popupProps","imagePreviewProps","loop","truthProp","images","makeArrayProp","makeNumericProp","overlay","closeable","showIndex","className","unknownProp","closeIcon","makeStringProp","transition","beforeClose","Function","overlayClass","overlayStyle","Object","swipeDuration","startPosition","showIndicators","closeOnPopstate","closeIconPosition","slots","swipeRef","ref","resize","rect","useRect","$el","width","height","emitScale","args","updateShow","emitClose","callInterceptor","done","setActive","renderIndex","renderCover","cover","renderClose","Icon","role","HAPTICS_FEEDBACK","onClick","onClosed","swipeTo","options","_a","useExpose","onMounted","windowWidth","windowHeight","nextTick","immediate","url","Popup","_mergeProps","pick","Swipe","lazyRender","duration","initialSwipe","indicatorColor","onChange","map","image","ImagePreviewItem","onScale","onClose","defaultConfig","teleport","initInstance","mountComponent","usePopupState","toggle","VanImagePreview","ImagePreview","inBrowser","Array","isArray","open","extend","Component","withInstall","install","app","use"],"mappings":"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"}