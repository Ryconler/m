{"version":3,"file":"ShareServiceTaskItem-legacy.2ba162b7.js","sources":["../../src/views/share-service/components/MediasPreview.vue","../../src/views/share-service/components/MediasExternal.vue","../../src/assets/images/share-service/logo-yunchan.png","../../src/views/share-service/ShareServiceTaskItem.vue","../../src/assets/images/share-service/logo-chengzhangjia.png","../../src/assets/images/share-service/logo-ziying.png","../../src/assets/images/share-service/logo-baoxian.png","../../src/assets/images/share-service/logo-huodong.png"],"sourcesContent":["<template>\n  <div class=\"media-preview\">\n    <!-- 这里不使用VanOverlay 否则lock-scroll\t锁定背景滚动后，锁定时蒙层里的内容也将无法滚动 -->\n    <VanPopup v-model:show=\"vanPopupShow\" :close-on-click-overlay=\"false\">\n      <div class=\"close\" @click=\"vanPopupShow = false\"></div>\n      <div class=\"medias\">\n        <VanSwipe\n          ref=\"vanSwipe\"\n          :loop=\"false\"\n          :show-indicators=\"false\"\n          :initial-swipe=\"initial\"\n          @change=\"swipeChange\"\n        >\n          <VanSwipeItem v-for=\"(item, index) in medias\" :key=\"index\">\n            <div class=\"media\" :class=\"currentIndex == index && 'active'\">\n              <div\n                v-if=\"item.materialType == MaterialType.Video\"\n                class=\"media-video\"\n              >\n                <video\n                  :src=\"`${item.picUrl}\\#t=0.1`\"\n                  preload=\"metadata\"\n                  controls\n                ></video>\n                <div class=\"type-flag\">\n                  {{ MaterialTypeText[item.materialType] }}\n                </div>\n              </div>\n              <div v-else class=\"media-image\">\n                <img :src=\"item.picUrl\" />\n                <div class=\"type-flag\">\n                  {{ MaterialTypeText[item.materialType] }}\n                </div>\n              </div>\n            </div>\n          </VanSwipeItem>\n        </VanSwipe>\n        <div class=\"indicators pf-medium\">\n          {{ currentIndex + 1 }}/{{ medias.length }}\n        </div>\n      </div>\n      <div class=\"share\">\n        <div class=\"share-button\" @click=\"shareClick\"><i></i>立即分享</div>\n        <div class=\"share-text\">分享时文案会自动复制，长按粘贴即可</div>\n      </div>\n    </VanPopup>\n  </div>\n</template>\n<script lang=\"ts\" setup>\n/* eslint-disable vue/require-default-prop */\nimport { queryShareKey } from '@/api/common'\nimport {\n  MaterialType,\n  MaterialTypeText,\n  ShareKeyLinkTypeWorkChat,\n  ShareKeyTokenWorkChat,\n  ShareKeyToolType,\n  ShareMaterialType\n} from '@/constant/shareService'\nimport {\n  convertImageBase64ToFile,\n  copyTextClipboard,\n  getPosterBase64,\n  sleep,\n  videoPreview\n} from '@/utils'\nimport {\n  ImagePreview,\n  Popup as VanPopup,\n  Swipe as VanSwipe,\n  SwipeItem as VanSwipeItem,\n  Toast\n} from 'vant'\nimport { nextTick, PropType, ref, toRefs, watch } from 'vue'\n\nconst props = defineProps({\n  taskId: {\n    type: Number\n  },\n  spuId: {\n    type: Number\n  },\n  show: {\n    type: Boolean,\n    default: false\n  },\n  medias: {\n    type: Object as PropType<ShareMaterialType[]>,\n    default() {\n      return []\n    }\n  },\n  initial: {\n    type: Number,\n    default: 0\n  },\n  copyText: {\n    type: String,\n    default: ''\n  }\n})\n\nconst emits = defineEmits(['update:show'])\n\nconst { taskId, spuId, show, medias, initial, copyText } = toRefs(props)\n\nconst vanSwipe = ref()\n\nconst vanPopupShow = ref(show.value)\nconst currentIndex = ref(initial.value)\n\nconst shareKey = ref('')\n\nwatch(show, val => {\n  vanPopupShow.value = val\n})\n\nwatch(vanPopupShow, val => {\n  emits('update:show', val)\n})\n\nwatch(initial, val => {\n  currentIndex.value = val\n})\n\nconst swipeChange = (index: number) => {\n  currentIndex.value = index\n}\n\nconst shareClick = async () => {\n  Toast.loading({\n    duration: 0,\n    forbidClick: true,\n    message: '加载中...'\n  })\n  const copyRes = await copyTextClipboard(copyText.value)\n  const media = medias.value[currentIndex.value]\n  let imgMediaId = ''\n  let videoMediaId = ''\n  if (\n    media.materialType == MaterialType.BxPoster ||\n    media.materialType == MaterialType.Poster\n  ) {\n    try {\n      shareKey.value = await queryShareKey({})\n      const posterBase64 = await getPosterBase64(\n        media.picUrl,\n        media.shareLink,\n        shareKey.value\n      )\n      imgMediaId = posterBase64\n    } catch (e: any) {\n      // 海报无镂空区域，直接用背景图当素材\n      imgMediaId = media.picUrl\n    }\n  } else if (media.materialType == MaterialType.Image) {\n    imgMediaId = media.picUrl\n  } else if (media.materialType == MaterialType.Video) {\n    videoMediaId = media.picUrl\n  }\n  if (copyRes) {\n    Toast({\n      message: '复制分享文案成功，可粘\\n贴至输入框内发送～',\n      duration: 0\n    })\n    await sleep(1000)\n  }\n  const image = imgMediaId ? { mediaid: imgMediaId } : undefined\n  const video = videoMediaId ? { mediaid: videoMediaId } : undefined\n  Toast('模拟分享成功...')\n  await sleep(1500)\n  if (image) {\n    ImagePreview([image.mediaid])\n  } else if (video) {\n    videoPreview({\n      videoUrl: video.mediaid\n    })\n  }\n}\n\nconst quickShare = async () => {\n  if (medias.value.length == 0) {\n    Toast('没有素材可以分享')\n    return\n  }\n  // 一张素材直接拉起分享\n  if (medias.value.length == 1) {\n    shareClick()\n    return\n  }\n  let showIndex = 0\n  // 优先寻找第一个代码海报\n  const firstPoster = medias.value.find((media, index) => {\n    if (media.materialType == MaterialType.Poster) {\n      showIndex = index\n      return true\n    } else {\n      return false\n    }\n  })\n  if (!firstPoster) {\n    // 其次寻找第一个保险海报\n    medias.value.find((media, index) => {\n      if (media.materialType == MaterialType.BxPoster) {\n        showIndex = index\n        return true\n      } else {\n        return false\n      }\n    })\n  }\n  vanPopupShow.value = true\n  nextTick(() => {\n    vanSwipe.value.swipeTo(showIndex, { immediate: true })\n  })\n}\n\ndefineExpose({\n  quickShare\n})\n</script>\n<style lang=\"scss\" scoped>\n.media-preview {\n  :deep(.van-popup) {\n    position: fixed;\n    background: transparent;\n    top: 0;\n    left: 0;\n    transform: none;\n    width: 100%;\n    height: 100%;\n    overflow-x: hidden;\n    overflow-y: auto;\n    .close {\n      position: absolute;\n      top: 48px;\n      right: 48px;\n      width: 44px;\n      height: 44px;\n      background: url('@/assets/images/media-preview/icon-close.png') 0 0/100%\n        100% no-repeat;\n    }\n    .medias {\n      margin: 280px 0 120px;\n      display: flex;\n      flex-direction: column;\n      align-items: center;\n      .van-swipe {\n        width: 544px;\n        height: 630px;\n        overflow: visible;\n        margin-bottom: 44px;\n        .van-swipe-item {\n          .media {\n            width: 100%;\n            height: 100%;\n            border-radius: 16px;\n            overflow: hidden;\n            transform: scale(0.815);\n            transition: transform 0.3s ease-in-out;\n            display: flex;\n            align-items: center;\n            &.active {\n              transform: scale(1);\n            }\n            .media-video {\n              width: 100%;\n              height: 100%;\n              position: relative;\n              video {\n                display: block;\n                width: 100%;\n                height: 100%;\n                object-fit: cover;\n              }\n              .play-icon {\n                position: absolute;\n                top: 50%;\n                left: 50%;\n                transform: translate(-50%, -50%);\n                width: 120px;\n                height: 120px;\n                background: url('@/assets/images/media-preview/icon-play.png') 0\n                  0/100% 100% no-repeat;\n              }\n            }\n            .media-image {\n              position: relative;\n              width: 100%;\n              max-height: 100%;\n              overflow-y: auto;\n              border-radius: 16px;\n              img {\n                width: 100%;\n                height: auto;\n              }\n            }\n            .type-flag {\n              position: absolute;\n              box-sizing: border-box;\n              top: 0;\n              right: 0;\n              border-bottom-left-radius: 16px;\n              padding: 0 15px;\n              height: 28px;\n              background: #ff397e;\n              color: #ffffff;\n              font-size: 18px;\n              line-height: 28px;\n            }\n          }\n        }\n      }\n      .indicators {\n        font-size: 32px;\n        color: #ffffff;\n      }\n    }\n    .share {\n      display: flex;\n      flex-direction: column;\n      align-items: center;\n      .share-button {\n        display: flex;\n        flex-direction: column;\n        align-items: center;\n        font-size: 24px;\n        color: #ffffff;\n        margin-bottom: 24px;\n        i {\n          width: 96px;\n          height: 96px;\n          background: url('@/assets/images/media-preview/icon-workchat.png') 0 0/100%\n            100% no-repeat;\n          margin-bottom: 12px;\n        }\n      }\n      .share-text {\n        font-size: 24px;\n        color: #ffffff;\n        line-height: 30px;\n      }\n    }\n  }\n}\n</style>\n","<template>\n  <VanOverlay\n    class=\"progress-overlay\"\n    :show=\"show\"\n    @click=\"shareButtonShow && (show = false)\"\n  >\n    <div class=\"progress-wrap\" @click.stop>\n      <div class=\"progress-text\">\n        <div\n          class=\"progress-total pf-medium\"\n          :class=\"getStatusClass(allProgressStatus.shareText)\"\n        >\n          <i class=\"status\"></i>\n          <span>话术已自动传输</span>\n        </div>\n      </div>\n      <div class=\"progress-media\">\n        <div\n          class=\"progress-total pf-medium\"\n          :class=\"getStatusClass(allProgressStatus.mediasTotal)\"\n        >\n          <i class=\"status\"></i>\n          <span>生成带员工信息图片素材，可记录到顾客访问和销售</span>\n        </div>\n        <div\n          v-for=\"(item, index) in allProgressStatus.medias\"\n          :key=\"index\"\n          class=\"progress-media-item\"\n          :class=\"getStatusClass(item)\"\n        >\n          <span>第{{ index + 1 }}张</span><i class=\"status\"></i>\n        </div>\n      </div>\n      <div v-if=\"shareButtonShow\" class=\"share-tip\">请选择发送方式</div>\n      <div v-if=\"shareButtonShow\" class=\"progress-buttons\">\n        <div class=\"share-contact-button pf-medium\" @click=\"shareContactClick\">\n          <i></i>客户\n        </div>\n        <div class=\"share-chat-button pf-medium\" @click=\"shareChatClick\">\n          <i></i>客户群\n        </div>\n        <div class=\"share-moment-button pf-medium\" @click=\"shareMomentClick\">\n          <i></i>朋友圈\n        </div>\n      </div>\n      <div v-else class=\"progress-tip pf-medium\">\n        正在生成中，请保持打开状态稍等...\n      </div>\n    </div>\n  </VanOverlay>\n</template>\n<script lang=\"ts\" setup>\nimport { queryShareKey } from '@/api/common'\nimport {\n  MaterialType,\n  ShareKeyLinkTypeWorkChat,\n  ShareKeyTokenWorkChat,\n  ShareKeyToolType,\n  ShareMaterialType\n} from '@/constant/shareService'\nimport {\n  convertImageBase64ToFile,\n  getPosterBase64,\n  sleep,\n  videoPreview\n} from '@/utils'\nimport { ImagePreview, Overlay as VanOverlay, Toast } from 'vant'\nimport { toRefs, ref, PropType, Ref, computed, watch } from 'vue'\n\nconst props = defineProps({\n  taskId: {\n    type: Number\n  },\n  spuId: {\n    type: Number\n  },\n  medias: {\n    type: Object as PropType<ShareMaterialType[]>,\n    default() {\n      return []\n    }\n  },\n  shareText: {\n    type: String,\n    default: ''\n  }\n})\nconst { taskId, spuId, medias, shareText } = toRefs(props)\n\nconst show = ref(false)\nconst shareKey = ref('')\n\nenum ProgressStatus {\n  Initial,\n  Processing,\n  Success,\n  Fail\n}\n\nconst allProgressStatus: Ref<{\n  shareText: ProgressStatus\n  medias: ProgressStatus[]\n  mediasTotal: ProgressStatus\n}> = ref({\n  shareText: ProgressStatus.Initial,\n  medias: new Array(medias.value.length).fill(ProgressStatus.Initial),\n  mediasTotal: ProgressStatus.Initial\n})\n\nconst shareButtonShow = computed(() => {\n  return (\n    allProgressStatus.value.shareText != ProgressStatus.Initial &&\n    allProgressStatus.value.shareText != ProgressStatus.Processing &&\n    allProgressStatus.value.mediasTotal != ProgressStatus.Initial &&\n    allProgressStatus.value.mediasTotal != ProgressStatus.Processing\n  )\n})\n\nconst attachmentsParam: Ref<any[]> = ref([])\n\nconst attachmentsWithErrorOrEmpty = computed(() => {\n  return (\n    attachmentsParam.value.length == 0 ||\n    allProgressStatus.value.medias.some(item => item == ProgressStatus.Fail)\n  )\n})\n\nwatch(\n  medias,\n  () => {\n    resetAttachmentsParam()\n  },\n  {\n    deep: true\n  }\n)\n\nfunction resetAttachmentsParam() {\n  attachmentsParam.value = []\n  allProgressStatus.value = {\n    shareText: ProgressStatus.Initial,\n    medias: new Array(medias.value.length).fill(ProgressStatus.Initial),\n    mediasTotal: ProgressStatus.Initial\n  }\n}\n\nconst getStatusClass = (status: ProgressStatus) => {\n  let className = ''\n  switch (status) {\n    case ProgressStatus.Initial:\n      className = 'initial'\n      break\n    case ProgressStatus.Processing:\n      className = 'processing'\n      break\n    case ProgressStatus.Success:\n      className = 'success'\n      break\n    case ProgressStatus.Fail:\n      className = 'fail'\n      break\n    default:\n      break\n  }\n  return className\n}\n\nconst getAttachmentsParam = async () => {\n  resetAttachmentsParam()\n  /* 话术 */\n  allProgressStatus.value.shareText = ProgressStatus.Success\n  /* 素材 */\n  allProgressStatus.value.mediasTotal = ProgressStatus.Processing\n  shareKey.value = await queryShareKey({})\n  for (const index in medias.value) {\n    allProgressStatus.value.medias[index] = ProgressStatus.Processing\n    const material = medias.value[index]\n    let result = false\n    if (\n      material.materialType == MaterialType.BxPoster ||\n      material.materialType == MaterialType.Poster\n    ) {\n      try {\n        const posterBase64 = await getPosterBase64(\n          material.picUrl,\n          material.shareLink,\n          shareKey.value\n        )\n        const mediaid = posterBase64\n        attachmentsParam.value.push({\n          msgtype: 'image',\n          image: {\n            mediaid\n          }\n        })\n        result = !!mediaid\n      } catch (e) {\n        // 海报无镂空区域，直接用背景图当素材\n        attachmentsParam.value.push({\n          msgtype: 'image',\n          image: {\n            imgUrl: material.picUrl\n          }\n        })\n        result = true\n      }\n    } else if (material.materialType == MaterialType.Image) {\n      attachmentsParam.value.push({\n        msgtype: 'image',\n        image: {\n          imgUrl: material.picUrl\n        }\n      })\n      result = true\n    } else if (material.materialType == MaterialType.Video) {\n      const mediaid = material.picUrl\n      attachmentsParam.value.push({\n        msgtype: 'video',\n        video: {\n          mediaid\n        }\n      })\n      result = !!mediaid\n    }\n    allProgressStatus.value.medias[index] = result\n      ? ProgressStatus.Success\n      : ProgressStatus.Fail\n  }\n  allProgressStatus.value.mediasTotal = ProgressStatus.Success\n}\n\nconst shareToExternal = async () => {\n  attachmentsWithErrorOrEmpty.value && getAttachmentsParam()\n  show.value = true\n}\n\n/* 发表内容到客户朋友圈 */\nconst shareMomentClick = async () => {\n  // 图片与视频数量限制处理\n  const iamgeAttachments: any[] = []\n  const videoAttachments: any[] = []\n  attachmentsParam.value.forEach(item => {\n    if (\n      item.msgtype == 'image' &&\n      (item.image?.mediaid || item.image?.imgUrl)\n    ) {\n      iamgeAttachments.push(item)\n    } else if (item.msgtype == 'video' && item.video?.mediaid) {\n      videoAttachments.push(item)\n    }\n  })\n  if (iamgeAttachments.length > 0 && videoAttachments.length > 0) {\n    Toast({\n      message: '视频不能与图片同时发表朋友圈，已自动过滤',\n      duration: 0,\n      forbidClick: true\n    })\n    await sleep(1500)\n  }\n  if (iamgeAttachments.length > 9) {\n    Toast({\n      message: '图片最多支持九张，已自动保留前九张',\n      duration: 0,\n      forbidClick: true\n    })\n    iamgeAttachments.splice(9, iamgeAttachments.length - 9)\n    await sleep(1500)\n  }\n  if (videoAttachments.length > 1) {\n    Toast({\n      message: '视频只支持一个，已自动保留第一个',\n      duration: 0,\n      forbidClick: true\n    })\n    videoAttachments.splice(1, 1)\n    await sleep(1500)\n  }\n  Toast({\n    message: '正在前往发送页...',\n    duration: 0,\n    forbidClick: true\n  })\n  Toast('模拟分享成功...')\n  await sleep(1500)\n  if (iamgeAttachments.length > 0) {\n    ImagePreview(\n      iamgeAttachments.map(item => item.image?.mediaid || item.image?.imgUrl)\n    )\n  } else if (videoAttachments.length > 0) {\n    videoPreview({\n      videoUrl: videoAttachments[0].mediaid\n    })\n  }\n}\n\n/* 群发消息给客户 */\nconst shareContactClick = async () => {\n  Toast({\n    message: '正在前往发送页...',\n    duration: 0,\n    forbidClick: true\n  })\n  Toast('模拟群发成功...')\n  await sleep(1500)\n  ImagePreview(\n    attachmentsParam.value.map(\n      item => item.image?.mediaid || item.image?.imgUrl\n    )\n  )\n}\n\n/* 群发消息到客户群 */\nconst shareChatClick = async () => {\n  Toast({\n    message: '正在前往发送页...',\n    duration: 0,\n    forbidClick: true\n  })\n  Toast('模拟群发成功...')\n  await sleep(1500)\n  ImagePreview(\n    attachmentsParam.value.map(\n      item => item.image?.mediaid || item.image?.imgUrl\n    )\n  )\n}\n\ndefineExpose({\n  shareToExternal\n})\n</script>\n<style lang=\"scss\" scoped>\n.progress-overlay {\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  .progress-wrap {\n    box-sizing: border-box;\n    width: 670px;\n    background: #ffffff;\n    border-radius: 16px;\n    padding: 32px 24px 50px;\n    .progress-text {\n      margin-bottom: 34px;\n    }\n    .progress-media {\n      margin-bottom: 50px;\n    }\n    .progress-total {\n      margin-bottom: 16px;\n      display: flex;\n      align-items: center;\n      i {\n        flex: none;\n        width: 40px;\n        height: 40px;\n        margin-right: 20px;\n      }\n      span {\n        flex: 1;\n        font-size: 28px;\n        line-height: 34px;\n        color: #15161f;\n      }\n    }\n    .progress-media-item {\n      padding-left: 64px;\n      margin-bottom: 20px;\n      display: flex;\n      justify-content: center;\n      align-items: center;\n      &:last-child {\n        margin-bottom: 0;\n      }\n      span {\n        flex: 1;\n        font-size: 24px;\n        color: #15161f;\n      }\n      i {\n        flex: none;\n        width: 32px;\n        height: 32px;\n      }\n    }\n    .share-tip {\n      text-align: center;\n      font-size: 24px;\n      color: #15161f;\n      margin-bottom: 20px;\n    }\n    .progress-buttons {\n      display: flex;\n      justify-content: center;\n      .share-contact-button {\n        padding: 0 24px;\n        height: 75px;\n        display: flex;\n        justify-content: center;\n        align-items: center;\n        box-sizing: border-box;\n        border: 3px solid #5aa945;\n        border-radius: 75px;\n        font-size: 30px;\n        color: #5aa945;\n        margin-right: 14px;\n        i {\n          width: 38px;\n          height: 38px;\n          margin-right: 12px;\n          background: url('@/assets/images/share-service/icon-contact.png') 0 0/100%\n            100% no-repeat;\n        }\n      }\n      .share-chat-button {\n        padding: 0 24px;\n        height: 75px;\n        display: flex;\n        justify-content: center;\n        align-items: center;\n        box-sizing: border-box;\n        border: 3px solid #5aa945;\n        border-radius: 75px;\n        font-size: 30px;\n        color: #5aa945;\n        margin-right: 14px;\n        i {\n          width: 38px;\n          height: 38px;\n          margin-right: 12px;\n          background: url('@/assets/images/share-service/icon-chat.png') 0 0/100%\n            100% no-repeat;\n        }\n      }\n      .share-moment-button {\n        padding: 0 24px;\n        height: 75px;\n        display: flex;\n        justify-content: center;\n        align-items: center;\n        box-sizing: border-box;\n        border: 3px solid #5aa945;\n        border-radius: 75px;\n        font-size: 30px;\n        color: #5aa945;\n        i {\n          width: 38px;\n          height: 38px;\n          margin-right: 12px;\n          background: url('@/assets/images/share-service/icon-moment.png') 0 0/100%\n            100% no-repeat;\n        }\n      }\n    }\n    .progress-tip {\n      text-align: center;\n      font-size: 28px;\n      line-height: 34px;\n      color: #282828;\n    }\n  }\n}\n\n/* 状态图标 */\ni.status {\n  background-repeat: no-repeat;\n  background-size: 100% 100%;\n  background-position: 0 0;\n}\n.initial i.status {\n  background-color: transparent;\n}\n.processing i.status {\n  background-image: url('@/assets/images/share-service/icon-loading.png');\n  animation: rotate 1s infinite linear;\n  @keyframes rotate {\n    0% {\n      transform: rotate(0);\n    }\n    100% {\n      transform: rotate(360deg);\n    }\n  }\n}\n.success i.status {\n  background-image: url('@/assets/images/share-service/icon-success.png');\n}\n.fail i.status {\n  background-image: url('@/assets/images/share-service/icon-fail.png');\n}\n</style>\n","export default \"__VITE_ASSET__9744e8c9__\"","<template>\n  <div class=\"share-task-item\">\n    <img class=\"task-logo\" :src=\"taskLogo\" />\n    <div class=\"task-detail\">\n      <div v-if=\"task.title\" class=\"task-title pf-medium\">{{ task.title }}</div>\n      <div v-if=\"task.sharePeople\" class=\"task-tags\">\n        <div\n          v-for=\"(item, index) in task.sharePeople.split(',')\"\n          :key=\"index\"\n          class=\"task-tag\"\n        >\n          {{ item }}\n        </div>\n      </div>\n      <div v-if=\"task.endTime\" class=\"task-time\">\n        活动截止日期：{{ task.endTime }}\n      </div>\n      <div v-if=\"task.shareArticle\" class=\"task-text\">\n        {{ task.shareArticle }}\n      </div>\n      <div v-if=\"task.shareMaterialList\" class=\"task-materials\">\n        <div\n          v-for=\"(item, index) in task.shareMaterialList.slice(0, slices)\"\n          :key=\"index\"\n          class=\"task-material\"\n        >\n          <div\n            v-if=\"item.materialType == MaterialType.Video\"\n            class=\"task-video\"\n            @click=\"videoClick(index)\"\n          >\n            <video :src=\"`${item.picUrl}\\#t=0.1`\" preload=\"metadata\"></video>\n            <i class=\"play-icon\"></i>\n          </div>\n          <BaseImg\n            v-else\n            :src=\"item.picUrl\"\n            :width=\"160\"\n            :height=\"160\"\n            @click=\"imageClick(index)\"\n          >\n          </BaseImg>\n        </div>\n      </div>\n      <div class=\"task-functions\">\n        <div class=\"task-link\">\n          <a v-if=\"task.detailLink\" :href=\"taskLink\" @click=\"linkClick\"\n            >查看链接</a\n          >\n          <div v-else></div>\n        </div>\n        <div class=\"task-buttons\">\n          <div class=\"task-quick-button\" @click=\"quickClick\"><i></i>分享</div>\n          <div class=\"workchat-send-button\" @click=\"externalClick\">\n            <i></i>群发\n          </div>\n          <div class=\"task-share-button\" @click=\"shareClick\"><i></i>详情</div>\n        </div>\n      </div>\n    </div>\n\n    <MediasPreview\n      ref=\"mediasPreview\"\n      v-model:show=\"workchatMediaShow\"\n      :task-id=\"task.id\"\n      :medias=\"task.shareMaterialList\"\n      :initial=\"workchatMediaInitial\"\n      :copy-text=\"task.shareArticle\"\n    >\n    </MediasPreview>\n    <MediasExternal\n      ref=\"mediasExternal\"\n      :task-id=\"task.id\"\n      :medias=\"task.shareMaterialList\"\n      :share-text=\"task.shareArticle\"\n    >\n    </MediasExternal>\n  </div>\n</template>\n<script lang=\"ts\" setup>\nimport { computed, PropType, ref, toRefs } from 'vue'\nimport {\n  MaterialType,\n  ShareTaskBusinessType,\n  ShareTaskType\n} from '@/constant/shareService'\nimport MediasPreview from './components/MediasPreview.vue'\nimport MediasExternal from './components/MediasExternal.vue'\nimport qs from 'query-string'\nimport LogoYunchan from '@/assets/images/share-service/logo-yunchan.png'\nimport LogoChengzhangjia from '@/assets/images/share-service/logo-chengzhangjia.png'\nimport LogoZiying from '@/assets/images/share-service/logo-ziying.png'\nimport LogoBaoxian from '@/assets/images/share-service/logo-baoxian.png'\nimport LogoHuodong from '@/assets/images/share-service/logo-huodong.png'\nimport { DefaultCity } from '@/constant/city'\n\nconst props = defineProps({\n  cityId: {\n    type: [String, Number],\n    default() {\n      return DefaultCity.cityId\n    }\n  },\n  task: {\n    type: Object as PropType<ShareTaskType>,\n    default() {\n      return {}\n    }\n  },\n  slices: {\n    type: Number,\n    default: undefined\n  }\n})\n\nconst { cityId, task } = toRefs(props)\n\nconst workchatMediaShow = ref(false)\nconst workchatMediaInitial = ref(0)\n\nconst taskLogo = computed(() => {\n  switch (task.value.businessType) {\n    case ShareTaskBusinessType.Yunchan:\n      return LogoYunchan\n    case ShareTaskBusinessType.Chengzhangjia:\n      return LogoChengzhangjia\n    case ShareTaskBusinessType.Ziying:\n      return LogoZiying\n    case ShareTaskBusinessType.Baoxian:\n      return LogoBaoxian\n    case ShareTaskBusinessType.Huodong:\n      return LogoHuodong\n    default:\n      return LogoYunchan\n  }\n})\n\nconst taskLink = computed(() => {\n  if (task.value.detailLink) {\n    const linkObj = qs.parseUrl(task.value.detailLink)\n    linkObj.query.kwtarget = 'blank'\n    return qs.stringifyUrl(linkObj)\n  } else {\n    return 'javascript:;'\n  }\n})\n\nconst linkClick = () => {}\n\nconst mediasPreview = ref()\nconst mediasExternal = ref()\n\nconst quickClick = async () => {\n  mediasPreview.value.quickShare()\n}\n\nconst externalClick = async () => {\n  mediasExternal.value.shareToExternal()\n}\n\nconst shareClick = () => {\n  location.href = `/share-service/task/${task.value.id}?cityId=${cityId.value}`\n}\n\nconst imageClick = (originIndex: number) => {\n  workchatMediaShow.value = true\n  workchatMediaInitial.value = originIndex\n}\n\nconst videoClick = (index: number) => {\n  workchatMediaShow.value = true\n  workchatMediaInitial.value = index\n}\n</script>\n\n<style lang=\"scss\" scoped>\n.share-task-item {\n  display: flex;\n  padding: 24px 24px 32px 24px;\n  background: #ffffff;\n  border-radius: 16px;\n  .task-logo {\n    flex: none;\n    margin-right: 24px;\n    width: 80px;\n    height: 80px;\n  }\n  .task-detail {\n    flex: 1;\n    .task-title {\n      font-size: 28px;\n      color: #15161f;\n      line-height: 34px;\n      margin-bottom: 12px;\n    }\n    .task-tags {\n      display: flex;\n      flex-wrap: wrap;\n      .task-tag {\n        display: flex;\n        justify-content: center;\n        align-items: center;\n        font-size: 18px;\n        color: #333333;\n        height: 24px;\n        padding: 0 8px;\n        background: #eeeeee;\n        border-radius: 4px;\n        margin-right: 12px;\n        margin-bottom: 12px;\n      }\n    }\n    .task-time {\n      font-size: 24px;\n      color: #999999;\n      line-height: 30px;\n      margin-bottom: 10px;\n    }\n    .task-text {\n      font-size: 24px;\n      color: #15161f;\n      line-height: 30px;\n      word-break: break-all;\n      white-space: pre-wrap;\n      margin-bottom: 12px;\n    }\n    .task-materials {\n      display: flex;\n      flex-wrap: wrap;\n      .task-material {\n        width: 160px;\n        height: 160px;\n        margin-right: 24px;\n        margin-bottom: 20px;\n        border-radius: 8px;\n        overflow: hidden;\n        &:nth-child(3n) {\n          margin-right: 0;\n        }\n        .task-video {\n          position: relative;\n          width: 100%;\n          height: 100%;\n          video {\n            display: block;\n            width: 100%;\n            height: 100%;\n            object-fit: cover;\n          }\n          .play-icon {\n            position: absolute;\n            top: 50%;\n            left: 50%;\n            transform: translate(-50%, -50%);\n            width: 48px;\n            height: 48px;\n            background: url('@/assets/images/share-service/icon-play.png') 0 0/100%\n              100% no-repeat;\n          }\n        }\n      }\n    }\n    .task-functions {\n      display: flex;\n      justify-content: space-between;\n      align-items: center;\n      flex-wrap: wrap;\n      .task-link {\n        flex: none;\n        a {\n          display: block;\n          font-size: 24px;\n          color: #ff397e;\n          padding-right: 32px;\n          background: url('@/assets/images/share-service/icon-link.png') right\n            center/24px 24px no-repeat;\n        }\n      }\n      .task-buttons {\n        display: flex;\n        align-items: center;\n        .workchat-send-button {\n          display: flex;\n          justify-content: center;\n          align-items: center;\n          padding: 0 20px;\n          height: 48px;\n          background: #ff397e;\n          border-radius: 24px;\n          font-size: 24px;\n          line-height: 30px;\n          color: #ffffff;\n          margin-right: 10px;\n          i {\n            width: 30px;\n            height: 30px;\n            margin-right: 10px;\n            background: url('@/assets/images/share-service/icon-wechat-white.png')\n              0 0/100% 100% no-repeat;\n          }\n        }\n        .task-quick-button {\n          display: flex;\n          justify-content: center;\n          align-items: center;\n          padding: 0 20px;\n          height: 48px;\n          background: #ff397e;\n          border-radius: 24px;\n          font-size: 24px;\n          line-height: 30px;\n          color: #ffffff;\n          margin-right: 10px;\n          i {\n            width: 30px;\n            height: 30px;\n            background: url('@/assets/images/share-service/icon-share.png') 0 0/100%\n              100% no-repeat;\n            margin-right: 10px;\n          }\n        }\n        .task-share-button {\n          display: flex;\n          justify-content: center;\n          align-items: center;\n          padding: 0 20px;\n          height: 48px;\n          background: #ff397e;\n          border-radius: 24px;\n          font-size: 24px;\n          line-height: 30px;\n          color: #ffffff;\n          i {\n            width: 30px;\n            height: 30px;\n            background: url('@/assets/images/share-service/icon-share.png') 0 0/100%\n              100% no-repeat;\n            margin-right: 8px;\n          }\n        }\n      }\n    }\n  }\n}\n</style>\n","export default \"__VITE_ASSET__44122450__\"","export default \"__VITE_ASSET__c0d86665__\"","export default \"__VITE_ASSET__4f0f08c9__\"","export default \"__VITE_ASSET__bf4df800__\""],"names":["toRefs","show","taskId","spuId","medias","initial","copyText","vanSwipe","ref","vanPopupShow","value","currentIndex","shareKey","val","swipeChange","index","shareClick","loading","duration","forbidClick","message","_context","copyTextClipboard","copyRes","media","imgMediaId","videoMediaId","materialType","MaterialType","BxPoster","Poster","queryShareKey","getPosterBase64","picUrl","shareLink","posterBase64","Image","Video","sleep","image","mediaid","video","videoUrl","quickShare","length","showIndex","find","swipeTo","immediate","shareText","allProgressStatus","Array","fill","mediasTotal","shareButtonShow","computed","attachmentsParam","attachmentsWithErrorOrEmpty","some","item","deep","getStatusClass","status","className","getAttachmentsParam","_context3","material","result","push","msgtype","imgUrl","shareToExternal","shareMomentClick","iamgeAttachments","videoAttachments","forEach","_item$image2","_item$video","_context5","splice","map","_item$image4","shareContactClick","_context6","_item$image6","shareChatClick","_context7","_item$image8","cityId","task","workchatMediaShow","workchatMediaInitial","taskLogo","businessType","ShareTaskBusinessType","Yunchan","LogoYunchan","Chengzhangjia","Ziying","Baoxian","Huodong","taskLink","detailLink","linkObj","qs","parseUrl","query","kwtarget","stringifyUrl","linkClick","mediasPreview","mediasExternal","quickClick","externalClick","href","id","originIndex"],"mappings":"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"}